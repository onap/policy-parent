{
  "comments": [
    {
      "key": {
        "uuid": "c308dcee_7a0e9060",
        "filename": "docs/conf.py",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 2787
      },
      "writtenOn": "2021-07-15T16:14:04Z",
      "side": 1,
      "message": "It is needed, file regenerated and restored.",
      "revId": "8e75657abe1565c344d21a8a87c85bef3d2be387",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25961c78_b8861007",
        "filename": "docs/conf.py",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-07-15T16:45:35Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c308dcee_7a0e9060",
      "revId": "8e75657abe1565c344d21a8a87c85bef3d2be387",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4372a14_c93873aa",
        "filename": "integration/pom.xml",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-07-15T16:45:35Z",
      "side": 1,
      "message": "isn\u0027t there a ${xxx} for this since it\u0027s this pom\u0027s version, too?  would rather not have to manually update this when we bump the version for policy-parent.",
      "range": {
        "startLine": 39,
        "startChar": 34,
        "endLine": 39,
        "endChar": 48
      },
      "revId": "8e75657abe1565c344d21a8a87c85bef3d2be387",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9113f87f_cdcb17fc",
        "filename": "integration/pom.xml",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 2787
      },
      "writtenOn": "2021-07-15T20:42:33Z",
      "side": 1,
      "message": "Yes, ${project.version}.\n\nHowever, when this plygin is pulled in by a POM in a module, the variable ${project.version} takes the value of the version of the project in that POM, not the parent one.\n\nSo say if we\u0027re using this in the CLMAP runtime pom, then ${project.version} is set to 6.1.2-SNAPSHOT, resulting in a \"dependency not found\" error. I was using ${project.version} until I found out this was happening.",
      "parentUuid": "f4372a14_c93873aa",
      "range": {
        "startLine": 39,
        "startChar": 34,
        "endLine": 39,
        "endChar": 48
      },
      "revId": "8e75657abe1565c344d21a8a87c85bef3d2be387",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee97d019_bfaa35e1",
        "filename": "integration/pom.xml",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 2787
      },
      "writtenOn": "2021-07-15T20:43:47Z",
      "side": 1,
      "message": "I was hoping this won\u0027t be such a huge issue because hopefully policy-parent shouldn\u0027t change much.",
      "parentUuid": "9113f87f_cdcb17fc",
      "range": {
        "startLine": 39,
        "startChar": 34,
        "endLine": 39,
        "endChar": 48
      },
      "revId": "8e75657abe1565c344d21a8a87c85bef3d2be387",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a498400_5c086f11",
        "filename": "integration/pom.xml",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-07-15T20:56:43Z",
      "side": 1,
      "message": "so we can\u0027t use ${project.version} instead of ${version.parent.resources}, and we also can\u0027t define version.parent.resources in terms of ${project.version}?\n\n  \u003cversion.parent.resources\u003e${project.version}\u003c/version.parent.resources\u003e\n\nseems like one of these should work. ðŸ˜ž\n\nanother idea: can we move the plugin stuff to its own pom and then have the other repos include that just like they do the integration/pom?  that way, it just becomes a normal part of the release process: when we update a repo\u0027s pom to point to a new version of integration/pom, we also change its version of resources/pom",
      "parentUuid": "ee97d019_bfaa35e1",
      "range": {
        "startLine": 39,
        "startChar": 34,
        "endLine": 39,
        "endChar": 48
      },
      "revId": "8e75657abe1565c344d21a8a87c85bef3d2be387",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09f5ef29_f2d9d73b",
        "filename": "integration/pom.xml",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 811
      },
      "writtenOn": "2021-07-15T21:04:12Z",
      "side": 1,
      "message": "I guess if worse comes to worse, we just update the \"Release Versioning\" instructions to include a special step for policy/parent.\n\nI am a little concerned about what happens when we do a stage-release, as the \"-SNAPSHOT\" suffix just kind of magically disappears without us manually stripping it.  Would that break something when we try to build one of the other repos after manually changing them to point at release versions of their dependents?",
      "parentUuid": "5a498400_5c086f11",
      "range": {
        "startLine": 39,
        "startChar": 34,
        "endLine": 39,
        "endChar": 48
      },
      "revId": "8e75657abe1565c344d21a8a87c85bef3d2be387",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf5cf24e_859482c4",
        "filename": "integration/pom.xml",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 2787
      },
      "writtenOn": "2021-07-16T08:00:23Z",
      "side": 1,
      "message": "Let me try tweaking it a bit more.",
      "parentUuid": "09f5ef29_f2d9d73b",
      "range": {
        "startLine": 39,
        "startChar": 34,
        "endLine": 39,
        "endChar": 48
      },
      "revId": "8e75657abe1565c344d21a8a87c85bef3d2be387",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2bdadd3_d4ddf86f",
        "filename": "integration/pom.xml",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 2787
      },
      "writtenOn": "2021-07-16T08:54:47Z",
      "side": 1,
      "message": "\u003cversion.parent.resources\u003e${project.version}\u003c/version.parent.resources\u003e doesn\u0027t work, it just gets the \"project.version\" of the POM of whatever module is being built.\n\nThe issue is that this profile needs to be in the inheritance hierarchy of the POM of the module that\u0027s being built when the effective POM is created AND the plugins in the profile need to have the resources (assembly and asciidoc template) to build the swagger docs.\n\nThese resources should very seldom change so it will be OK for the \"version.parent.resources\" to point at an earlier version than the current policy-parent once we have done one release.\n\nSo it\u0027ll be OK for policy-parent to be on 3.4.1-SNAPSHOT and have versino.oarent.resources point ant version 3.4.0",
      "parentUuid": "bf5cf24e_859482c4",
      "range": {
        "startLine": 39,
        "startChar": 34,
        "endLine": 39,
        "endChar": 48
      },
      "revId": "8e75657abe1565c344d21a8a87c85bef3d2be387",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}