@startuml
participant REST
participant "ACM Runtime"
database "ACM Database"
participant Participant

alt Automation Composition Type has Deployed Instances
  REST <- "ACM Runtime": Priming of Automation Composition Type Failed, \ninstances deployed
else Automation Composition Type is in state COMMISSIONED or PRIMED
 REST -> "ACM Runtime": Prime Automation Composition Type

 "ACM Runtime" -> "ACM Database": Read Automation Composition Type
 "ACM Runtime" -> "ACM Database": Read Participants
 "ACM Runtime" -> "ACM Runtime": Set suitable participant ID on each AC Element Type

 alt Was a sutable participant ID found for each AC Element Type?
  "ACM Runtime" -> Participant: [ASYNC] Send Priming Request to all Participants\nwith Automation Composition Type Definition
  "ACM Runtime" -> "ACM Database": Set Automation Composition Type State to PRIMING

  REST <- "ACM Runtime": Priming of Automation Composition Type Ordered
 else
   REST <- "ACM Runtime": Priming of Automation Composition Type Faield, \nno sutiable participant found
 end
else
 REST <- "ACM Runtime": Priming of Automation Composition Type Failed, \ninvalid state
end

@enduml
