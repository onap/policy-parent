{
  "swagger": "2.0",
  "basePath": "/",
  "tags": [
    {
      "name": "Consolidated Healthcheck"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json",
    "application/yaml"
  ],
  "produces": [
    "application/json",
    "application/yaml"
  ],
  "paths": {
    "/policy/pap/v1/components/healthcheck": {
      "get": {
        "tags": [
          "Consolidated Healthcheck"
        ],
        "summary": "Returns health status of all policy components, including PAP, API, Distribution, and PDPs",
        "description": "Queries health status of all policy components, returning all policy components health status",
        "operationId": "policyComponentsHealthCheck",
        "produces": [
          "application/json",
          "application/yaml"
        ],
        "parameters": [
          {
            "name": "X-ONAP-RequestID",
            "in": "header",
            "description": "RequestID for http transaction",
            "required": false,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-MinorVersion": {
                "type": "string",
                "description": "Used to request or communicate a MINOR version back from the client to the server, and from the server back to the client"
              },
              "X-PatchVersion": {
                "type": "string",
                "description": "Used only to communicate a PATCH version in a response for troubleshooting purposes only, and will not be provided by the client on request"
              },
              "X-LatestVersion": {
                "type": "string",
                "description": "Used only to communicate an API's latest version"
              },
              "X-ONAP-RequestID": {
                "type": "string",
                "format": "uuid",
                "description": "Used to track REST transactions for logging purpose"
              }
            },
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Authentication Error"
          },
          "403": {
            "description": "Authorization Error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "x-interface info": {
          "api-version": "1.0.0",
          "last-mod-release": "Frankfurt"
        }
      }
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "description": "",
      "type": "basic"
    }
  }
}